{
  "RedwoodJS Page": {
    "prefix": "rwpage",
    "body": [
      "import { Metadata } from '@redwoodjs/web'",
      "",
      "const ${TM_FILENAME_BASE} = () => {",
      "  return (",
      "    <>",
      "      <Metadata title=\"${1:${TM_FILENAME_BASE/Page//}}\" />",
      "      $0",
      "    </>",
      "  )",
      "}",
      "",
      "export default ${TM_FILENAME_BASE}"
    ],
    "description": "Creates a new RedwoodJS page component with Metadata"
  },
  "RedwoodJS New Component": {
    "prefix": "rwnew",
    "body": [
      "import { useMutation } from '@redwoodjs/web'",
      "import { toast } from '@redwoodjs/web/toast'",
      "import { CREATE_${TM_FILENAME_BASE/^New(.*)/${1:/upcase}/} } from 'src/components/graphql/${TM_FILENAME_BASE/^New(.*)/${1}s/}/${TM_FILENAME_BASE/^New(.*)/${1}s/}'",
      "import ${TM_FILENAME_BASE/^New(.*)/$1/}Form from '../${TM_FILENAME_BASE/^New(.*)/$1/}Form/${TM_FILENAME_BASE/^New(.*)/$1/}Form'",
      "",
      "const ${TM_FILENAME_BASE} = () => {",
      "  const [create${TM_FILENAME_BASE/^New(.*)/$1/}, { loading }] = useMutation(CREATE_${TM_FILENAME_BASE/^New(.*)/${1:/upcase}/}, {",
      "    onCompleted: () => {",
      "      toast.success('${TM_FILENAME_BASE/^New(.*)/$1/} created')",
      "    },",
      "    onError: (error) => {",
      "      toast.error(error.message)",
      "    },",
      "    refetchQueries: ['${TM_FILENAME_BASE/^New(.*)/${1}s/}CellQuery'],",
      "    awaitRefetchQueries: true,",
      "  })",
      "",
      "  const onSave = (input) => {",
      "    create${TM_FILENAME_BASE/^New(.*)/$1/}({ variables: { input } })",
      "  }",
      "",
      "  return <${TM_FILENAME_BASE/^New(.*)/$1/}Form onSave={onSave} loading={loading} type=\"new\" />",
      "}",
      "",
      "export default ${TM_FILENAME_BASE}"
    ],
    "description": "Creates a new RedwoodJS New{Table} component for creating records"
  },
  "RedwoodJS List Cell Component": {
    "prefix": "rwlistcell",
    "body": [
      "import type { ${TM_FILENAME_BASE}Query } from 'types/graphql'",
      "import { CellFailureProps, CellSuccessProps } from '@redwoodjs/web'",
      "import LoadingAnimation from 'src/components/ui/LoadingAnimation/LoadingAnimation'",
      "import ${TM_FILENAME_BASE/Cell//} from '../${TM_FILENAME_BASE/Cell//}/${TM_FILENAME_BASE/Cell//}'",
      "",
      "export const QUERY = gql`",
      "  query ${TM_FILENAME_BASE}Query {",
      "    ${TM_FILENAME_BASE/(.*?)Cell/${1:/downcase}/} {",
      "      id$0",
      "    }",
      "  }",
      "`",
      "",
      "export const Loading = () => <LoadingAnimation />",
      "",
      "export const Failure = ({ error }: CellFailureProps) => (",
      "  <div className=\"rw-cell-error\">{error?.message}</div>",
      ")",
      "",
      "export const Success = ({ ${TM_FILENAME_BASE/(.*?)Cell/${1:/downcase}/} }: CellSuccessProps<${TM_FILENAME_BASE}Query>) => {",
      "  return <${TM_FILENAME_BASE/Cell//} ${TM_FILENAME_BASE/(.*?)Cell/${1:/downcase}/}={${TM_FILENAME_BASE/(.*?)Cell/${1:/downcase}/}} />",
      "}",
      ""
    ],
    "description": "Creates a new RedwoodJS List Cell component for querying and displaying data"
  }
}
